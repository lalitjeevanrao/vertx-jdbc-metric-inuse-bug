apply plugin: 'application' 
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

repositories {
    jcenter()
    mavenLocal()
}

def environment = hasProperty('env') ? env : null
distributions {
    main {
        if (environment != null) {
            def envProperties = "conf/${environment}/resources"
            assert project.file(envProperties).exists()
            sourceSets.main.resources.srcDirs envProperties

            contents {
                from("conf/${environment}") {
                    into "conf"
                }
            }
        } 
    }
}

dependencies {

      compile (
    	 	'org.slf4j:slf4j-api:1.7.21',
    	 	'io.vertx:vertx-dropwizard-metrics:3.5.1',
    		'io.dropwizard.metrics:metrics-graphite:3.1.2',
    		'io.dropwizard.metrics:metrics-core:3.1.2',
    		'io.vertx:vertx-core:3.5.0',
    		'io.vertx:vertx-jdbc-client:3.5.0',
	 	'ch.qos.logback:logback-classic:1.2.3',
	 	'org.hsqldb:hsqldb:2.3.2'
    		)
 
      testCompile 'junit:junit:4.12'
}

mainClassName = 'rao.lalit.main.Main'

jar {
    manifest {
        attributes "Main-Class": "rao.lalit.main.Main"
    }
 
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task copyLicense {
    outputs.file new File("$buildDir/LICENSE")
    doLast {
        copy {
            from "LICENSE"
            into "$buildDir"
        }
    }
}

applicationDistribution.from(copyLicense) {
    into ""
}